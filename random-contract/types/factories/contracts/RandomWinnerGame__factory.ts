/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RandomWinnerGame,
  RandomWinnerGameInterface,
} from "../../contracts/RandomWinnerGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vrfWrapper",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vrfFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "GameEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxPlayers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
    ],
    name: "GameStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerJoined",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "joinGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxPlayer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_entrayFee",
        type: "uint256",
      },
    ],
    name: "startGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vrfWrapper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610e75380380610e7583398101604081905261002f916100e5565b828261003a33610079565b6001600160a01b03918216608052811660a052600280546001600160a01b0319169390911692909217909155600155506005805460ff19169055610121565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e057600080fd5b919050565b6000806000606084860312156100fa57600080fd5b610103846100c9565b9250610111602085016100c9565b9150604084015190509250925092565b60805160a051610d1a61015b6000396000818161020a015281816108d701526109e00152600081816107c701526108ad0152610d1a6000f3fe60806040526004361061009a5760003560e01c80638da5cb5b116100615780638da5cb5b1461015f578063d4f77b1c1461017d578063d7c81b5514610185578063ddca3f43146101a9578063f2fde38b146101bf578063f71d96cb146101df57005b80631fe543e3146100a35780635e123ce4146100c3578063715018a6146100f2578063730b83811461010757806383bbf9421461012757005b366100a157005b005b3480156100af57600080fd5b506100a16100be366004610ab0565b6101ff565b3480156100cf57600080fd5b506005546100dd9060ff1681565b60405190151581526020015b60405180910390f35b3480156100fe57600080fd5b506100a161028a565b34801561011357600080fd5b506100a1610122366004610b7a565b61029e565b34801561013357600080fd5b50600254610147906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b34801561016b57600080fd5b506000546001600160a01b0316610147565b6100a1610372565b34801561019157600080fd5b5061019b60075481565b6040519081526020016100e9565b3480156101b557600080fd5b5061019b60015481565b3480156101cb57600080fd5b506100a16101da366004610b9c565b610515565b3480156101eb57600080fd5b506101476101fa366004610bcc565b61058b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461027c5760405162461bcd60e51b815260206004820152601f60248201527f6f6e6c792056524620563220777261707065722063616e2066756c66696c6c0060448201526064015b60405180910390fd5b61028682826105b5565b5050565b6102926106f9565b61029c6000610753565b565b6102a66106f9565b60055460ff16156102ea5760405162461bcd60e51b815260206004820152600e60248201526d47616d652069732072756e696e6760901b6044820152606401610273565b6102f660036000610a68565b600482905560068190556005805460ff1916600190811790915560078054600090610322908490610be5565b909155505060075460045460065460408051938452602084019290925282820152517fedb371157a97763aaa1b348e6811cbb8c9eb299aaf93a6f5ba91f312bcb40fcf9181900360600190a15050565b60055460ff166103d05760405162461bcd60e51b815260206004820152602360248201527f4572726f723a47616d6520686173206e6f74206265656e2073746172746564206044820152621e595d60ea1b6064820152608401610273565b600654341461042d5760405162461bcd60e51b815260206004820152602360248201527f56616c75652073656e74206973206e6f7420657175616c20746f20656e74727960448201526246656560e81b6064820152608401610273565b60045460035411156104705760405162461bcd60e51b815260206004820152600c60248201526b11d85b59481a5cc8199d5b1b60a21b6044820152606401610273565b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916339081179091556007546040517f87969bc7faf902221a147b95ceba76e011c5efb0339a0a8ee7a2bb82d9cfbbd6926104f79282526001600160a01b0316602082015260400190565b60405180910390a16004546003540361029c576105126107a3565b50565b61051d6106f9565b6001600160a01b0381166105825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610273565b61051281610753565b6003818154811061059b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000600380549050826000815181106105d0576105d0610c0c565b60200260200101516105e29190610c22565b90506000600382815481106105f9576105f9610c0c565b60009182526020822001546040516001600160a01b039091169250829047908381818185875af1925050503d8060008114610650576040519150601f19603f3d011682016040523d82523d6000602084013e610655565b606091505b505090508061069d5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610273565b600754604080519182526001600160a01b038416602083015281018690527ff1898de79c348962fab7695532341027e5bceb0ea2a8785790fa7d7efeeee1299060600160405180910390a150506005805460ff19169055505050565b6000546001600160a01b0316331461029c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610273565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546040516370a0823160e01b8152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561080e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108329190610c44565b10156108725760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420656e6f756768204c494e4b60881b6044820152606401610273565b610882620186a060036001610887565b905090565b6040516310c1b4d560e21b815263ffffffff841660048201526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691634000aea0917f00000000000000000000000000000000000000000000000000000000000000009190821690634306d35490602401602060405180830381865afa158015610921573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109459190610c44565b6040805163ffffffff808b16602083015261ffff8a169282019290925290871660608201526080016040516020818303038152906040526040518463ffffffff1660e01b815260040161099a93929190610c5d565b6020604051808303816000875af11580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190610cc2565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc2a88c36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a609190610c44565b949350505050565b508054600082559060005260206000209081019061051291905b80821115610a965760008155600101610a82565b5090565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610ac357600080fd5b8235915060208084013567ffffffffffffffff80821115610ae357600080fd5b818601915086601f830112610af757600080fd5b813581811115610b0957610b09610a9a565b8060051b604051601f19603f83011681018181108582111715610b2e57610b2e610a9a565b604052918252848201925083810185019189831115610b4c57600080fd5b938501935b82851015610b6a57843584529385019392850192610b51565b8096505050505050509250929050565b60008060408385031215610b8d57600080fd5b50508035926020909101359150565b600060208284031215610bae57600080fd5b81356001600160a01b0381168114610bc557600080fd5b9392505050565b600060208284031215610bde57600080fd5b5035919050565b80820180821115610c0657634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b600082610c3f57634e487b7160e01b600052601260045260246000fd5b500690565b600060208284031215610c5657600080fd5b5051919050565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b81811015610c9f57858101830151858201608001528201610c83565b506000608082860101526080601f19601f83011685010192505050949350505050565b600060208284031215610cd457600080fd5b81518015158114610bc557600080fdfea264697066735822122039597e7234e4ac8a9dafbfa305a5a12ce7a23804bd833694a2058d54a8db089564736f6c63430008110033";

type RandomWinnerGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomWinnerGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomWinnerGame__factory extends ContractFactory {
  constructor(...args: RandomWinnerGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _link: PromiseOrValue<string>,
    _vrfWrapper: PromiseOrValue<string>,
    vrfFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RandomWinnerGame> {
    return super.deploy(
      _link,
      _vrfWrapper,
      vrfFee,
      overrides || {}
    ) as Promise<RandomWinnerGame>;
  }
  override getDeployTransaction(
    _link: PromiseOrValue<string>,
    _vrfWrapper: PromiseOrValue<string>,
    vrfFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _link,
      _vrfWrapper,
      vrfFee,
      overrides || {}
    );
  }
  override attach(address: string): RandomWinnerGame {
    return super.attach(address) as RandomWinnerGame;
  }
  override connect(signer: Signer): RandomWinnerGame__factory {
    return super.connect(signer) as RandomWinnerGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomWinnerGameInterface {
    return new utils.Interface(_abi) as RandomWinnerGameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomWinnerGame {
    return new Contract(address, _abi, signerOrProvider) as RandomWinnerGame;
  }
}
